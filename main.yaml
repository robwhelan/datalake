---
AWSTemplateFormatVersion: '2010-09-09'
Description: builds a basic datalake with 3 zones and dedicated encryption keys.


Parameters:
  pProjectName:
    Type: String
    Description: overall project name which will be used for tags and resource naming.
  pS3TemplateLocation:
    Type: String
    Description: S3 location for the datalake files Example https://datalake-rww.s3.amazonaws.com
  pTemplateBucket:
    Type: String
    Description: S3 bucket name for datalake files.

  # RedShift
  pBuildRedshift:
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
    Description: Choose whether to build a Redshift Cluster or not
  pRsDBName:
    Type: String
    Default: "default"
  pRsMasterUsername:
    Type: String
    Default: "admin"
  pRsMasterUserPassword:
    Type: String
    Default: ""
    NoEcho: True
  pRsNodeType:
    Type: String
    Default: dc1.large
  pRsNumberOfNodes:
    Type: Number
    Default: 4
  pRsPort:
    Type: Number
    Default: 5439
  pRsSubnetIds:
    Type: List<String>
  pRsClusterIngressCIDR:
    Type: String
    Default: '10.0.0.0/0'
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'
  pRsClusterIngressSG:
    Type: String
    Default: ""

Conditions:
  cBuildRedshift: !Equals
    - !Ref pBuildRedshift
    - "true"


Resources:
  rDropZone:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        pDeadLetterQueueArn: !GetAtt rDeadLetterQueue.Outputs.rQueueArn
        pProjectName: !Ref pProjectName
        pSqsQueueVisibilityTimeout: 120
        pTransitionClass: GLACIER
        pTransitionInDays: 30
        pZone: drop
      TemplateURL: !Sub '${pS3TemplateLocation}/components/zone.yaml'
      TimeoutInMinutes: 15

  rRawZone:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        pDeadLetterQueueArn: !GetAtt rDeadLetterQueue.Outputs.rQueueArn
        pProjectName: !Ref pProjectName
        pSqsQueueVisibilityTimeout: 120
        pTransitionClass: GLACIER
        pTransitionInDays: 7
        pZone: raw
      TemplateURL: !Sub '${pS3TemplateLocation}/components/zone.yaml'
      TimeoutInMinutes: 15

  rCuratedZone:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        pDeadLetterQueueArn: !GetAtt rDeadLetterQueue.Outputs.rQueueArn
        pProjectName: !Ref pProjectName
        pSqsQueueVisibilityTimeout: 120
        pTransitionClass: GLACIER
        pTransitionInDays: 7
        pZone: curated
      TemplateURL: !Sub '${pS3TemplateLocation}/components/zone.yaml'
      TimeoutInMinutes: 15

  #main database for data catalog.
  rEtlPipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        pProjectName: !Ref pProjectName
        pDropZoneBucket: !GetAtt rDropZone.Outputs.oS3Bucket
        pRawZoneBucket: !GetAtt rRawZone.Outputs.oS3Bucket
        pCuratedZoneBucket: !GetAtt rCuratedZone.Outputs.oS3Bucket
        pTemplateBucket: !Ref pTemplateBucket
      TemplateURL: !Sub '${pS3TemplateLocation}/components/etl.yaml'
      TimeoutInMinutes: 5

  #cloudtrail logging
  #rCloudtrailTrail:
  #  Type: AWS::CloudFormation::Stack
  #  DependsOn: rLoggingBucket
  #  Properties:
  #    Parameters:
  #      pLoggingBucket: !Ref rLoggingBucket
  #    TemplateURL: !Sub '{$pS3TemplateLocation}/monitoring/cloudtrail.yaml
  #    TimeoutInMinutes: 5

  #Monitoring
  #dead letter queue for general failures
  rDeadLetterQueue:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        pProjectName: !Ref pProjectName
        pQueueName: !Sub '${pProjectName}-dead-letter-queue'
      TemplateURL: !Sub '${pS3TemplateLocation}/components/queue-dead-letter.yaml'
      TimeoutInMinutes: 5

  rCodeCommitRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: !Sub 'Repository to keep notebooks for the ${pProjectName} datalake project.'
      RepositoryName: !Sub 'AmazonSageMaker-${pProjectName}-elt-repo' #MUST START WITH AMAZONSAGEMAKER

  #central logging bucket for any logging event - s3 access logging, cloudtrail.
  #TODO: this must be in a different account later.
  #config rules
  #logging
  #other security, like macie


  rRedshiftS3Role:
    Type: AWS::IAM::Role
    Condition: cBuildRedshift
    Properties:
      RoleName: !Sub "${pProjectName}-RedshiftCluster-Role"
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - redshift.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${pProjectName}-RedshiftCluster-Policy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !GetAtt rCuratedZone.Outputs.oS3Bucket
                Action: 
                 - s3:ListBucket
              - Effect: Allow
                Resource: !Sub
                  - "${bucket}/*"
                  - { bucket: !GetAtt rCuratedZone.Outputs.oS3Bucket }
                Action:
                  - s3:GetObject

  # TODO: Figure out a good timeout...redshift can take awhile
  rRedshiftCluster:
    Type: AWS::CloudFormation::Stack
    Condition: cBuildRedshift
    Properties:
      TemplateURL: !Sub '${pS3TemplateLocation}/components/redshift.yaml'
      TimeoutInMinutes: 120
      Parameters:
        pProjectName: !Ref pProjectName
        pClusterName: !Sub "${pProjectName}-RedshiftCluster"
        pDBName: !Ref pRsDBName
        pMasterUsername: !Ref pRsMasterUsername
        pMasterUserPassword: !Ref pRsMasterUserPassword
        pNodeType: !Ref pRsNodeType
        pNumberOfNodes: !Ref pRsNumberOfNodes
        pPort: !Ref pRsPort
        pIamRoleArns: 
          - !Ref rRedshiftS3Role
        pSubnetIds: !Ref pRsSubnetIds
        pClusterIngressCIDR: !Ref pRsClusterIngressCIDR
        pClusterIngressSG: !Ref pRsClusterIngressSG


Outputs:
  oDropZoneBucket:
    Value: !GetAtt rDropZone.Outputs.oS3Bucket
  oETLRepoCloneUrl:
    Value: !GetAtt rCodeCommitRepo.CloneUrlHttp
