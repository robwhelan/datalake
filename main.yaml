AWSTemplateFormatVersion: '2010-09-09'
Description: builds a basic datalake with 3 zones and dedicated encryption keys.
Parameters:
  pProjectName:
    Type: String
    Description: overall project name which will be used for tags and resource naming.
  pS3TemplateLocation:
    Type: String
    Description: S3 location for the datalake files Example https://datalake-rww.s3.amazonaws.com
Resources:
  rDropZone:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - rDeadLetterQueue
    Properties:
      Parameters:
        pDeadLetterQueueArn: !GetAtt rDeadLetterQueue.Outputs.rQueueArn
        pProjectName: !Ref pProjectName
        pSqsQueueVisibilityTimeout: 120
        pTransitionClass: GLACIER
        pTransitionInDays: 30
        pZone: drop
      TemplateURL: !Sub '${pS3TemplateLocation}/components/zone.yaml'
      TimeoutInMinutes: 15

  rRawZone:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - rDeadLetterQueue
    Properties:
      Parameters:
        pDeadLetterQueueArn: !GetAtt rDeadLetterQueue.Outputs.rQueueArn
        pProjectName: !Ref pProjectName
        pSqsQueueVisibilityTimeout: 120
        pTransitionClass: GLACIER
        pTransitionInDays: 7
        pZone: raw
      TemplateURL: !Sub '${pS3TemplateLocation}/components/zone.yaml'
      TimeoutInMinutes: 15

  rCuratedZone:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - rDeadLetterQueue
    Properties:
      Parameters:
        pDeadLetterQueueArn: !GetAtt rDeadLetterQueue.Outputs.rQueueArn
        pProjectName: !Ref pProjectName
        pSqsQueueVisibilityTimeout: 120
        pTransitionClass: GLACIER
        pTransitionInDays: 7
        pZone: curated
      TemplateURL: !Sub '${pS3TemplateLocation}/components/zone.yaml'
      TimeoutInMinutes: 15

  #main database for data catalog.
  rEtlPipeline:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - rDropZone
      - rRawZone
      - rCuratedZone
    Properties:
      Parameters:
        pProjectName: !Ref pProjectName
        pDropZoneBucket: !GetAtt rDropZone.Outputs.oS3Bucket
        pRawZoneBucket: !GetAtt rRawZone.Outputs.oS3Bucket
        pCuratedZoneBucket: !GetAtt rCuratedZone.Outputs.oS3Bucket
      TemplateURL: !Sub '${pS3TemplateLocation}/components/etl.yaml'
      TimeoutInMinutes: 5

  #cloudtrail logging
  #rCloudtrailTrail:
  #  Type: AWS::CloudFormation::Stack
  #  DependsOn: rLoggingBucket
  #  Properties:
  #    Parameters:
  #      pLoggingBucket: !Ref rLoggingBucket
  #    TemplateURL: !Sub '{$pS3TemplateLocation}/monitoring/cloudtrail.yaml
  #    TimeoutInMinutes: 5

  #Monitoring
  #dead letter queue for general failures
  rDeadLetterQueue:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        pProjectName: !Ref pProjectName
        pQueueName: !Sub '${pProjectName}-dead-letter-queue'
      TemplateURL: !Sub '${pS3TemplateLocation}/components/queue-dead-letter.yaml'
      TimeoutInMinutes: 5

  rCodeCommitRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: !Sub 'A secure code repository for all the ETL within the ${pProjectName} project.'
      RepositoryName: !Sub '${pProjectName}-etl-repo'

  #central logging bucket for any logging event - s3 access logging, cloudtrail.
  #TODO: this must be in a different account later.
  #config rules
  #logging
  #other security, like macie

Outputs:
  oDropZoneBucket:
    Value: !GetAtt rDropZone.Outputs.oS3Bucket
  oETLRepoCloneUrl:
    Value: !GetAtt rCodeCommitRepo.CloneUrlHttp
