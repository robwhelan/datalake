AWSTemplateFormatVersion: "2010-09-09"
Description: ETL infrastructure. Glue database, crawler for each zone, and jobs.
Parameters:
  pProjectName:
    Type: String
  pDropZoneBucket:
    Type: String
  pRawZoneBucket:
    Type: String
  pCuratedZoneBucket:
    Type: String
Resources:
  #glue service role. Reference the glue managed policy.
  #then, create a custom policy that allows glue to read and write to the s3 buckets.
  rGlueServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Description: A role that gives Glue jobs and crawlers basic service permissions.
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      RoleName: BaseGlueServiceRole
      Tags:
        - Key: Environment
          Value: Security

  rGlueS3Policy:
    Type: AWS::IAM::Policy
    DependsOn: rGlueServiceRole
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "s3:GetObject"
              - "s3:PutObject"
            Resource:
              - !Sub 'arn:aws:s3:::${pDropZoneBucket}/*'
              - !Sub 'arn:aws:s3:::${pRawZoneBucket}/*'
              - !Sub 'arn:aws:s3:::${pCuratedZoneBucket}/*'
      PolicyName: glueServiceRole-read-write-s3
      Roles:
        - !Ref rGlueServiceRole

  rGlueDatabaseDrop:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
          Description: Central virtual database for all tables in the drop zone of the data lake.
          #LocationUri: String
          Name: !Sub '${pProjectName}-datalake-drop-zone-database'
  rGlueDatabaseRaw:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
          Description: Central virtual database for all tables in the raw zone of the data lake.
          #LocationUri: String
          Name: !Sub '${pProjectName}-datalake-raw-zone-database'
  rGlueDatabaseCurated:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
          Description: Central virtual database for all tables in the curated zone of the data lake.
          #LocationUri: String
          Name: !Sub '${pProjectName}-datalake-curated-zone-database'
  rGlueCrawlerDropZone:
    Type: AWS::Glue::Crawler
    Properties:
      DatabaseName: !Ref rGlueDatabaseDrop
      Description: Crawls data in the drop zone to establish table
      Name: !Sub '${pProjectName}-datalake-crawler-dropzone'
      Role: !GetAtt rGlueServiceRole.Arn
      SchemaChangePolicy:
        DeleteBehavior: DEPRECATE_IN_DATABASE
        UpdateBehavior: UPDATE_IN_DATABASE
      TablePrefix: !Sub '${pProjectName}_drop_' #generalize this
      Targets:
        S3Targets:
          - Path: !Sub 's3://${pDropZoneBucket}/order_items/'
          - Path: !Sub 's3://${pDropZoneBucket}/order_reviews/'
          - Path: !Sub 's3://${pDropZoneBucket}/orders/'
          - Path: !Sub 's3://${pDropZoneBucket}/sellers/'
  rGlueCrawlerRawZone:
    Type: AWS::Glue::Crawler
    Properties:
      DatabaseName: !Ref rGlueDatabaseRaw
      Description: Crawls data to establish table in the raw zone - general analytics.
      Name: !Sub '${pProjectName}-datalake-crawler-rawzone'
      Role: !GetAtt rGlueServiceRole.Arn
      SchemaChangePolicy:
        DeleteBehavior: DEPRECATE_IN_DATABASE
        UpdateBehavior: UPDATE_IN_DATABASE
      TablePrefix: !Sub '${pProjectName}_raw_' #generalize this
      Targets:
        S3Targets:
          - Path: !Sub 's3://${pRawZoneBucket}/'
          #TODO: get rid of hard-coding of s3 targets.
  rGlueCrawlerCuratedZone:
    Type: AWS::Glue::Crawler
    Properties:
      DatabaseName: !Ref rGlueDatabaseCurated
      Description: Crawls data to establish table in the curated zone for a data mart.
      Name: !Sub '${pProjectName}-datalake-crawler-curatedzone'
      Role: !GetAtt rGlueServiceRole.Arn
      SchemaChangePolicy:
        DeleteBehavior: DEPRECATE_IN_DATABASE
        UpdateBehavior: UPDATE_IN_DATABASE
      TablePrefix: !Sub '${pProjectName}_curated_' #generalize this
      Targets:
        S3Targets:
          - Path: !Sub 's3://${pCuratedZoneBucket}/'
#TODO: add tags and other metadata to the tables. Can you do this here, or after the table is creqated?
Outputs:
  oGlueServiceRoleArn:
    Value: !GetAtt rGlueServiceRole.Arn
